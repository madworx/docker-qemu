diff --git a/net/slirp.c b/net/slirp.c
index 77042e6..be3299c 100644
--- a/net/slirp.c
+++ b/net/slirp.c
@@ -352,10 +352,11 @@ static int net_slirp_init(NetClientState *peer, const char *model,
                           bool ipv6, const char *vprefix6, int vprefix6_len,
                           const char *vhost6,
                           const char *vhostname, const char *tftp_export,
-                          const char *bootfile, const char *vdhcp_start,
-                          const char *vnameserver, const char *vnameserver6,
-                          const char *smb_export, const char *vsmbserver,
-                          const char **dnssearch, const char *vdomainname,
+                          const char *bootfile, const char *rootpath,
+                          const char *vdhcp_start, const char *vnameserver,
+                          const char *vnameserver6, const char *smb_export,
+                          const char *vsmbserver, const char **dnssearch,
+                          const char *vdomainname,
                           const char *tftp_server_name,
                           Error **errp)
 {
@@ -562,7 +563,7 @@ static int net_slirp_init(NetClientState *peer, const char *model,
     s->slirp = slirp_init(restricted, ipv4, net, mask, host,
                           ipv6, ip6_prefix, vprefix6_len, ip6_host,
                           vhostname, tftp_server_name,
-                          tftp_export, bootfile, dhcp,
+                          tftp_export, bootfile, rootpath, dhcp,
                           dns, ip6_dns, dnssearch, vdomainname,
                           &slirp_cb, s);
     QTAILQ_INSERT_TAIL(&slirp_stacks, s, entry);
@@ -1097,7 +1098,7 @@ int net_init_slirp(const Netdev *netdev, const char *name,
                          ipv4, vnet, user->host,
                          ipv6, user->ipv6_prefix, user->ipv6_prefixlen,
                          user->ipv6_host, user->hostname, user->tftp,
-                         user->bootfile, user->dhcpstart,
+                         user->bootfile, user->rootpath, user->dhcpstart,
                          user->dns, user->ipv6_dns, user->smb,
                          user->smbserver, dnssearch, user->domainname,
                          user->tftp_server_name, errp);
diff --git a/qapi/net.json b/qapi/net.json
index a3a1336..2ffa373 100644
--- a/qapi/net.json
+++ b/qapi/net.json
@@ -131,6 +131,8 @@
 #
 # @bootfile: BOOTP filename, for use with tftp=
 #
+# @rootpath: DHCP root-path option, for use with tftp=
+#
 # @dhcpstart: the first of the 16 IPs the built-in DHCP server can
 #             assign
 #
@@ -178,6 +180,7 @@
     '*host':      'str',
     '*tftp':      'str',
     '*bootfile':  'str',
+    '*rootpath':  'str',
     '*dhcpstart': 'str',
     '*dns':       'str',
     '*dnssearch': ['String'],
diff --git a/qemu-options.hx b/qemu-options.hx
index 104632e..89595d1 100644
--- a/qemu-options.hx
+++ b/qemu-options.hx
@@ -2368,7 +2368,7 @@ DEF("netdev", HAS_ARG, QEMU_OPTION_netdev,
     "         [,ipv6[=on|off]][,ipv6-net=addr[/int]][,ipv6-host=addr]\n"
     "         [,restrict=on|off][,hostname=host][,dhcpstart=addr]\n"
     "         [,dns=addr][,ipv6-dns=addr][,dnssearch=domain][,domainname=domain]\n"
-    "         [,tftp=dir][,tftp-server-name=name][,bootfile=f][,hostfwd=rule][,guestfwd=rule]"
+    "         [,tftp=dir][,tftp-server-name=name][,bootfile=f][,rootpath=dir][,hostfwd=rule][,guestfwd=rule]"
 #ifndef _WIN32
                                              "[,smb=dir[,smbserver=addr]]\n"
 #endif
@@ -2631,6 +2631,18 @@ SRST
             |qemu_system| -hda linux.img -boot n -device e1000,netdev=n1 \\
                 -netdev user,id=n1,tftp=/path/to/tftp/files,bootfile=/pxelinux.0
 
+    ``rootpath=dir``
+        When using the user mode network stack, broadcast dir as the
+        NFS root-path. In conjunction with ``tftp``, this can be used
+        to network boot a guest from a local directory.
+
+        Example (using pxelinux):
+
+        .. parsed-literal::
+
+            |qemu_system| -hda linux.img -boot n -device e1000,netdev=n1 \
+                -netdev user,id=n1,tftp=/path/to/tftp/files,rootpath=/bsd
+
     ``smb=dir[,smbserver=addr]``
         When using the user mode network stack, activate a built-in SMB
         server so that Windows OSes can access to the host files in
