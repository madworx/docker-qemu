Submodule slirp contains modified content
diff --git a/slirp/src/bootp.c b/slirp/src/bootp.c
index a0eb17a..fcd568c 100644
--- a/slirp/src/bootp.c
+++ b/slirp/src/bootp.c
@@ -97,7 +97,8 @@ found:
 static void dhcp_decode(const struct bootp_t *bp,
                         const uint8_t *bp_end,
                         int *pmsg_type,
-                        struct in_addr *preq_addr)
+                        struct in_addr *preq_addr,
+                        char *classid)
 {
     const uint8_t *p;
     int len, tag;
@@ -135,6 +136,9 @@ static void dhcp_decode(const struct bootp_t *bp,
                     memcpy(&(preq_addr->s_addr), p, 4);
                 }
                 break;
+            case RFC2132_VENDOR_CLASS_ID:
+    	       snprintf(classid, 128, "%.*s", len, p);
+                break;
             default:
                 break;
             }
@@ -160,9 +164,10 @@ static void bootp_reply(Slirp *slirp,
     uint8_t *q;
     uint8_t *end;
     uint8_t client_ethaddr[ETH_ALEN];
+    char client_classid[128];
 
     /* extract exact DHCP msg type */
-    dhcp_decode(bp, bp_end, &dhcp_msg_type, &preq_addr);
+    dhcp_decode(bp, bp_end, &dhcp_msg_type, &preq_addr, (char*)&client_classid);
     DPRINTF("bootp packet op=%d msgtype=%d", bp->bp_op, dhcp_msg_type);
     if (preq_addr.s_addr != htonl(0L))
         DPRINTF(" req_addr=%08" PRIx32 "\n", ntohl(preq_addr.s_addr));
@@ -261,8 +266,13 @@ static void bootp_reply(Slirp *slirp,
         }
 
         if (slirp->bootp_filename) {
-            g_assert(strlen(slirp->bootp_filename) < sizeof(rbp->bp_file));
-            strcpy(rbp->bp_file, slirp->bootp_filename);
+            if (!strcmp("NetBSD:i386:libsa", client_classid)) {
+                snprintf((char *)rbp->bp_file, sizeof(rbp->bp_file), "%s",
+                         "tftp://netbsd.gz" );
+            } else {
+                g_assert(strlen(slirp->bootp_filename) < sizeof(rbp->bp_file));
+                strcpy(rbp->bp_file, slirp->bootp_filename);
+            }
         }
 
         *q++ = RFC2132_SRV_ID;
