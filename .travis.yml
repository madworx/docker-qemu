language: python

cache:
  - pip
  - /home/travis/.cpan

env:
  matrix:
    - CONSUMER="madworx/docker-minix 3.4.0rc6"
    - CONSUMER="madworx/docker-netbsd 8.0"

stages:
  - name: "Try auto-upgrade"
    if: type = cron OR branch = build-by-travisci
  - name: "Build image"
    if: type != cron
  - name: "Test"
    if: type != cron
  - name: "Submit PR"
    if: branch = autobuild
  - name: "Publish artifacts"
    if: branch = master AND type = push

before_script:
  - source <(curl 'https://raw.githubusercontent.com/madworx/cd-ci-glue/master/src/cd-ci-glue.bash')
  - pip install awscli
  - export PATH="${PATH}:/home/travis/perl5/bin"
  - export PERL5LIB="${PERL5LIB}:/home/travis/perl5/lib/perl5"
  - export ECRREPO="$(awsecr_login)"
  - export ECRIMG="${ECRREPO}/madworx/qemu:travisbuild-${TRAVIS_BUILD_NUMBER}"

script:
  - docker pull "${ECRIMG}"
  - docker tag "${ECRIMG}" "madworx/qemu:latest"
  - git clone --depth 1 "https://github.com/${CONSUMER/ */}"
  - cd "$(basename "${CONSUMER/ */}")"
  - if [ -d tools ] ; then cpanm --local-lib=~/perl5 local::lib ; cpanm --quiet --installdeps --notest ./tools ; fi
  - MINIX_VERSION="${CONSUMER/* /}" NETBSD_VERSION="${CONSUMER/* /}" make build test

jobs:
  include:
    - stage: "Try auto-upgrade"
      env: CONSUMER
      script:
        - echo "Attempting to auto-upgrade if there's a new version to be had."
        - export LATEST_QEMU="$(github_releases_get_latest qemu/qemu)"
        - export CURRENT_QEMU="$(make version)"
        - |
          if [[ "$(make version)" != "${LATEST_QEMU}" ]] ; then
            echo "Newer version (${LATEST_QEMU}) found instead of current (${CURRENT_QEMU}). Patching Makefile"
            sed -e "s#^\\(QEMU_VERSION :=\\).*#\\1 ${LATEST_QEMU}#" -i Makefile
            echo "Attempting to re-integrate patches."
            make reintegrate-qemu-release || exit 1
            echo "Re-integration worked. Deleting possible old autobuild branch and commit new one."
            git remote remove origin
            git remote add origin https://${GH_TOKEN}@github.com/madworx/docker-qemu
            git branch -D autobuild || true
            git push origin :autobuild || true
            git checkout -b autobuild
            git commit -a -m "Reintegration against ${LATEST_QEMU} worked."
            git remote -v
            git push -u origin autobuild
          fi
    - stage: "Build image"
      env: CONSUMER
      script:
        - make build
        - docker tag "madworx/qemu:latest" "madworx/qemu:travisbuild-${TRAVIS_BUILD_NUMBER}"
        - awsecr_push_image "madworx/qemu:travisbuild-${TRAVIS_BUILD_NUMBER}"
    - stage: "Publish artifacts"
      env: CONSUMER
      script:
        - docker pull "${ECRIMG}"
        - docker tag "${ECRIMG}" "madworx/qemu:latest"
        - docker tag "${ECRIMG}" "madworx/qemu:$(make version)"
        - "! is_travis_master_push && echo 'Not really publishing since not on master' || dockerhub_push_image madworx/qemu:latest"
        - "! is_travis_master_push && echo 'Not really publishing since not on master' || dockerhub_push_image madworx/qemu:`make version`"
    - stage: "Submit PR"
      env: CONSUMER
      script:
        - echo "Apparently auto-upgrade worked. Generate a PR with the code changes."
        - git diff
